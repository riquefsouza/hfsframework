<#if opcao == 1>
<#list listaLogAdmVO as item>
CREATE TABLE ${esquema}.log_${item.tabelaAbreviada} (
	id         NUMBER(20) not null primary key,
	usuario    varchar2(30),
	data       DATE,
	operacao   char(1),
	ip         varchar2(50),${item.campos});
</#list>                     
<#elseif opcao == 2>         
<#list listaLogAdmVO as item>            
CREATE SEQUENCE ${esquema}.log_${item.tabelaAbreviada}_seq minvalue 1 maxvalue 9999999999999999999999999999 start with 1 increment by 1 nocache cycle order;
</#list>
<#elseif opcao == 3>
<#list listaLogAdmVO as item>
CREATE OR REPLACE TRIGGER ${esquema}.trg_${item.tabelaAbreviada}_auid AFTER INSERT OR UPDATE OR DELETE ON ${esquema}.${item.tabela}
    FOR EACH ROW
    BEGIN
      IF (INSERTING) THEN
        INSERT INTO ${esquema}.log_${item.tabelaAbreviada}(id,data,operacao,usuario,ip,
        ${item.colunas}) VALUES
        (${esquema}.log_${item.tabelaAbreviada}_seq.nextval, SYSDATE, 'I', NVL(pkg_adm.obter_usuario, USER), 
        NVL(pkg_adm.obter_ip_usuario, SYS_CONTEXT('USERENV', 'IP_ADDRESS', 15)),
        ${item.newColunas});
      ELSIF (UPDATING) THEN
        INSERT INTO ${esquema}.log_${item.tabelaAbreviada}(id,data,operacao,usuario,ip,
        ${item.xColunas},
        ${item.colunas}) VALUES
        (${esquema}.log_${item.tabelaAbreviada}_seq.nextval, SYSDATE, 'U', NVL(pkg_adm.obter_usuario, USER), 
        NVL(pkg_adm.obter_ip_usuario, SYS_CONTEXT('USERENV', 'IP_ADDRESS', 15)),
        ${item.oldColunas},
        ${item.newColunas});
      ELSE
        INSERT INTO ${esquema}.log_${item.tabelaAbreviada}(id,data,operacao,usuario,ip,
        ${item.colunas}) VALUES
        (${esquema}.log_${item.tabelaAbreviada}_seq.nextval, SYSDATE, 'D', NVL(pkg_adm.obter_usuario, USER), 
        NVL(pkg_adm.obter_ip_usuario, SYS_CONTEXT('USERENV', 'IP_ADDRESS', 15)),
        ${item.oldColunas});
      END IF;
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
END;
/
</#list>
<#elseif opcao == 4>
<#list listaLogAdmVO as item>
ALTER TRIGGER trg_${item.tabelaAbreviada}_auid ENABLE;
</#list>
<#elseif opcao == 5>
<#list listaLogAdmVO as item>
CREATE OR REPLACE VIEW VW_ADM_LOG_DADOS AS
SELECT t.usuario, t.data, t.operacao, t.ip, '${item.entidade}' entidade, '${item.tabela}' tabela, ${item.chave} chave, to_number(to_char(t.data,'YYYYMMDDHH24MISS')) dataNumero
    FROM log_${item.tabelaAbreviada} t
UNION
</#list>

CREATE OR REPLACE VIEW VW_ADM_LOG AS
SELECT ROWNUM ID,
    V.USUARIO,
    V.DATA,
    V.OPERACAO,
    V.IP,
    V.ENTIDADE,
    V.TABELA,
    V.CHAVE,
    V.DATANUMERO
   FROM ( SELECT DISTINCT T.USUARIO,
            T.DATA,
            T.OPERACAO,
            T.IP,
            T.ENTIDADE,
            T.TABELA,
            T.CHAVE,
            T.DATANUMERO
           FROM VW_ADM_LOG_DADOS T
          ORDER BY T.DATA DESC) V;
          
<#elseif opcao == 6>
<#list listaLogAdmValorVO as item>
CREATE OR REPLACE VIEW VW_ADM_LOG_VALOR_DADOS AS
SELECT t.usuario, t.data, t.operacao, t.ip, '${item.entidade}' entidade, '${item.tabela}' tabela, ${item.chave} chave, to_number(to_char(t.data,'YYYYMMDDHH24MISS')) dataNumero, 
'${item.coluna}' coluna, to_char(t.x${item.campo}) valorAnterior, to_char(t.${item.campo}) valor
    FROM log_${item.tabelaAbreviada} t
UNION
</#list>

CREATE OR REPLACE VIEW VW_ADM_LOG_VALOR AS
SELECT ROWNUM ID,
    V.USUARIO,
    V.DATA,
    V.OPERACAO,
    V.IP,
    V.ENTIDADE,
    V.TABELA,
    V.CHAVE,
    V.DATANUMERO,
    V.COLUNA,
    V.VALORANTERIOR,
    V.VALOR
   FROM ( SELECT DISTINCT T.USUARIO,
            T.DATA,
            T.OPERACAO,
            T.IP,
            T.ENTIDADE,
            T.TABELA,
            T.CHAVE,
            T.DATANUMERO,
            T.COLUNA,
            T.VALORANTERIOR,
            T.VALOR
           FROM VW_ADM_LOG_VALOR_DADOS T
          ORDER BY T.DATA DESC) V;

<#elseif opcao == 7>
<#list listaLogAdmVO as item>
DROP TRIGGER trg_${item.tabelaAbreviada}_auid;
DROP SEQUENCE log_${item.tabelaAbreviada}_seq;
</#list>

<#list listaLogAdmVO as item>
DROP TABLE log_${item.tabelaAbreviada} cascade constraints;
</#list>
</#if>