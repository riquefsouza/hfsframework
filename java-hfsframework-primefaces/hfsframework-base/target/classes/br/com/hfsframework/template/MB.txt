package ${pacote}.view.${objeto};

import java.io.IOException;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.inject.Named;

import org.apache.deltaspike.core.api.scope.ViewAccessScoped;

import com.lowagie.text.BadElementException;
import com.lowagie.text.DocumentException;

import br.com.hfsframework.base.BaseViewCadastro;
import br.com.hfsframework.base.IBaseViewCadastro;
import ${pacote}.business.${classe}BC;
import ${pacote}.model.${classe};
import ${pacote}.security.Pages;
import br.com.hfsframework.util.interceptors.TratamentoErrosEsperados;

@Named
@ViewAccessScoped
@TratamentoErrosEsperados
public class ${classe}MB extends
		BaseViewCadastro<${classe}, ${idTipo}, ${classe}BC, 
		Pages.Secure.Listar${classe}, Pages.Secure.Editar${classe}>
		implements IBaseViewCadastro<${classe}> {

	private static final long serialVersionUID = 1L;

	public ${classe}MB() {
		super(Pages.Secure.Listar${classe}.class, Pages.Secure.Editar${classe}.class);
	}

	@PostConstruct
	public void init() {
		atualizaListaDataTable();
	}
	
	@Override
	public String onIncluir() {
		return super.onIncluir(new ${classe}());
	}

	@Override
	public String salvar() {
		return super.salvar(getBean().getId(), getBean().getDescricao());
	}

	@Override
	public void excluir(${classe} entidade) {
		super.excluir(entidade);
	}

	@Override
	public void preProcessPDF(Object document) throws IOException, BadElementException, DocumentException {
		super.preProcessPDF(document, "${classe}");
	}

	@Override
	public ${classe} getBean() {
		return super.getEntidade();
	}

	@Override
	public void setBean(${classe} entidade) {
		super.setEntidade(entidade);
	}

	@Override
	public List<${classe}> getListaBean() {
		return super.getListaEntidade();
	}

	@Override
	public void setListaBean(List<${classe}> listaEntidade) {
		super.setListaEntidade(listaEntidade);		
	}

}
